name: Build DEV Release

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      nodeBaseImage:
        description: 'node alpine docker image  (e.g. node:x.y.z-alpine)'
        required: true
        default: 'node:20.15.0-alpine'
        type: string
      hubIdentifier:
        description: 'docker repo identifier'
        required: true
        default: 'docker.io'
        type: string
      organizationIdentifier:
        description: 'Organization Registry Identifier (concatenated with hubIdentifier and image name)'
        required: true
        default: 'assistos'
        type: string
      llmosTag:
        description: 'LLMOS Image version (e.g. x.y.z version style or leave blank to prevent build)'
        default: ''
        type: string
      llmOsRC:
        description: 'LLMOS Release Candidate number'
        default: ''
        type: string
      assistosTag:
        description: 'AssistOS version'
        required: true
        default: '1.0.0'
        type: string
      assistosRC:
        description: 'AssistOS Release Candidate number'
        required: true
        default: '1'
        type: string

env:
  LLMOS_TAG: ""

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  # This workflow contains a single job called "build"
  build-dev-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    environment: production

    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout code
        uses: actions/checkout@v3
       
      - name: Update LLMOS env values
        run: |
          cd buildScripts/llmos  
          echo "" > values.sh
          cat > values.sh << EOF
          NODE_ALPINE_BASE_IMAGE='${{ inputs.nodeBaseImage }}'
          HUB_IDENTIFIER='${{ inputs.hubIdentifier }}'  
          LLMOS_NAME='llmos'
          LLMOS_REPO='https://github.com/AssistOS-AI/LLMOS.git'
          LLMOS_IMAGE_NAME='${{ inputs.organizationIdentifier }}/llmos'
          VERSION='${{ inputs.llmosTag }}-rc${{ inputs.llmosRC }}' 
          EOF

      - name: Run llmos build script
        if: ${{inputs.llmosTag != ''}}
        run: |
          cd buildScripts/llmos
          ./build.sh 

      - name: Tag llmos image
        if: ${{inputs.llmosTag != ''}}
        run: |
          cd buildScripts/llmos
          ./tag.sh

      - name: Publishing the images
        if: ${{inputs.llmosTag != ''}}
        run: |
          LLMOS_TAG=${{ inputs.llmosTag }}-rc${{ inputs.llmosRC }}
          echo "publishing LLMOS dev build version $LLMOS_TAG"
          docker push ${{inputs.hubIdentifier}}/${{ inputs.organizationIdentifier }}/llmos:$LLMOS_TAG
          echo "LLMOS_TAG=$LLMOS_TAG" >> $GITHUB_ENV

      - name: Update AssistOS env values
        run: |
          cd buildScripts/assistos-workspace  
          echo "" > values.sh
          cat > values.sh << EOF
          NODE_ALPINE_BASE_IMAGE='${{ inputs.nodeBaseImage }}' 
          HUB_IDENTIFIER='${{ inputs.hubIdentifier }}'  
          ASSISTOS_NAME='assistos-workspace'
          ASSISTOS_REPO='https://github.com/AssistOS-AI/assistos-workspace.git'
          ASSISTOS_IMAGE_NAME='${{ inputs.organizationIdentifier }}/asssistos-workspace'
          VERSION='${{ inputs.assistosTag }}-rc${{ inputs.assistosRC }}'
          EOF

      - name: Run AssistOS build script
        run: |
          cd buildScripts/assistos-workspace
          ./build.sh

      - name: Tag AssistOS image
        run: |
          cd buildScripts/assistos-workspace
          ./tag.sh

      - name: List images
        run: |
          docker image ls

      - name: Publishing the images
        run: |
          ASSISTOS_TAG=${{ inputs.assistosTag }}-rc${{ inputs.assistosRC }}
          echo "publishing ASSISTOS dev build version $ASSISTOS_TAG"
          docker push '${{inputs.hubIdentifier}}/${{ inputs.organizationIdentifier }}/assistos-workspace:$ASSISTOS_TAG'
          echo "ASSISTOS_TAG=$ASSISTOS_TAG" >> $GITHUB_ENV

      - name: 'Add information to Summary'
        run: |
          cat << 'EOF' >> $GITHUB_STEP_SUMMARY
          | Inputs                 | Value                                                |
          | ---------------------- | -----------------------------------------------------|
          | nodeBaseImage          | ${{ inputs.nodeBaseImage }}                          |
          | hubIdentifier          | ${{ inputs.hubIdentifier }}                          |
          | organizationIdentifier | ${{ inputs.organizationIdentifier }}                 |
          | llmosTag               | ${{ inputs.llmosTag }}-rc${{ inputs.llmOsRC }}       |
          | assistosTag            | ${{ inputs.assistosTag }}-rc${{ inputs.assistosRC }} |
          EOF