name: Deploy Monitoring on Webdock

on:
  workflow_dispatch:

jobs:
  deploy-monitoring:
    name: Deploy Monitoring Stack
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure SSH
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          sudo echo "$SSH_KEY" > private_key.pem
          sudo chmod 600 private_key.pem

      - name: Deploy Monitoring Stack on Webdock
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          ALERT_EMAIL: ${{ secrets.ALERT_EMAIL }}
        run: |
          sudo ssh -o StrictHostKeyChecking=no -i private_key.pem $SSH_USER@$SSH_HOST << 'EOF'
            # Add Helm repositories
            helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
            helm repo add grafana https://grafana.github.io/helm-charts
            helm repo update

            # Create values.yaml for Loki and Promtail
            cat <<EOV > values.yaml
            loki:
              enabled: true
            promtail:
              enabled: true
              config:
                enabled: true
                file: |
                  server:
                    log_level: info
                    log_format: logfmt
                    http_listen_port: 3101
                  clients:
                    - url: http://loki:3100/loki/api/v1/push
                  positions:
                    filename: /run/promtail/positions.yaml
                  scrape_configs:
                    - job_name: kubernetes-logs
                      pipeline_stages:
                        - cri: { }
                      kubernetes_sd_configs:
                        - role: pod
                      relabel_configs:
                        - source_labels: [ __meta_kubernetes_namespace ]
                          action: keep
                          regex: default
            grafana:
              enabled: false
            prometheus:
              enabled: false
            EOV

            # Deploy Loki stack
            helm upgrade --install loki grafana/loki-stack \
              --namespace monitoring \
              --create-namespace \
              -f values.yaml

            # Create values.yaml for Prometheus
            cat <<EOP > prometheus-values.yaml
            alertmanager:
              enabled: true
              config:
                global:
                  resolve_timeout: 5m
                  smtp_smarthost: '$SMTP_HOST'
                  smtp_from: '$SMTP_USER'
                  smtp_auth_username: '$SMTP_USER'
                  smtp_auth_password: '$SMTP_PASSWORD'
                  smtp_require_tls: true
                route:
                  group_by: ['job']
                  group_wait: 30s
                  group_interval: 5m
                  repeat_interval: 12h
                  receiver: 'email-alerts'
                receivers:
                  - name: 'null'
                  - name: 'email-alerts'
                    email_configs:
                      - to: '$ALERT_EMAIL'
            EOP

            # Deploy Prometheus stack
            helm upgrade --install prometheus prometheus-community/kube-prometheus-stack \
              --namespace monitoring \
              --create-namespace \
              -f prometheus-values.yaml

            # Apply ServiceMonitor for Loki
            cat <<EOS | kubectl apply -f -
            apiVersion: monitoring.coreos.com/v1
            kind: ServiceMonitor
            metadata:
              name: loki
              namespace: monitoring
              labels:
                release: prometheus
            spec:
              selector:
                matchLabels:
                  app: loki
              namespaceSelector:
                matchNames:
                  - monitoring
              endpoints:
                - port: http-metrics
                  interval: 30s
            EOS

            # Apply alerting rules
            cat <<EOR | kubectl apply -f -
            apiVersion: monitoring.coreos.com/v1
            kind: PrometheusRule
            metadata:
              name: high-log-rate
              namespace: monitoring
              labels:
                release: prometheus
            spec:
              groups:
                - name: loki.rules
                  rules:
                    - alert: HighLogRate
                      expr: rate(loki_distributor_lines_received_total[1m]) > 5
                      for: 1m
                      labels:
                        severity: warning
                      annotations:
                        summary: "High log rate detected"
                        description: "Log rate is greater than 5 entries per second for the last minute."
            EOR

            # Verify deployments
            kubectl get pods -n monitoring
            kubectl get servicemonitors -n monitoring
            kubectl get prometheusrules -n monitoring
          EOF

      - name: Clean Up
        run: |
          sudo rm -f private_key.pem
