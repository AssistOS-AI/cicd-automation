name: Deploy Monitoring on Webdock

on:
  workflow_dispatch:

jobs:
  deploy-monitoring:
    name: Deploy Monitoring Stack
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Connect via SSH
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          ALERT_EMAIL: ${{ secrets.ALERT_EMAIL }}
        run: |
          echo "$SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          ssh -o StrictHostKeyChecking=no -i private_key.pem $SSH_USER@$SSH_HOST << 'EOF'
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update
        
          cat <<EOL > values.yaml
          loki:
            enabled: true
          promtail:
            enabled: true
            config:
              enabled: true
              file: |
                server:
                  log_level: info
                  log_format: logfmt
                  http_listen_port: 3101
                clients:
                  - url: http://loki:3100/loki/api/v1/push
                positions:
                  filename: /run/promtail/positions.yaml
                scrape_configs:
                  - job_name: kubernetes-assistos
                    pipeline_stages:
                      - cri: { }
                    kubernetes_sd_configs:
                      - role: pod
                    relabel_configs:
                      - source_labels: [ __meta_kubernetes_namespace ]
                        action: keep
                        regex: default
                      - source_labels: [ __meta_kubernetes_pod_label_app_kubernetes_io_name ]
                        action: keep
                        regex: assistos
                      - source_labels: [ __meta_kubernetes_pod_label_app_kubernetes_io_instance ]
                        action: keep
                        regex: assistos
                      - source_labels: [ __meta_kubernetes_pod_container_name ]
                        action: keep
                        regex: assistos
                      - source_labels: [ __meta_kubernetes_namespace ]
                        target_label: namespace
                      - source_labels: [ __meta_kubernetes_pod_name ]
                        target_label: pod
                      - source_labels: [ __meta_kubernetes_pod_container_name ]
                        target_label: container
                      - action: replace
                        replacement: /var/log/pods/*\$1/*.log
                        separator: /
                        source_labels:
                          - __meta_kubernetes_pod_uid
                          - __meta_kubernetes_pod_container_name
                        target_label: __path__
          grafana:
            enabled: false
          prometheus:
            enabled: false
          EOL
        
          helm upgrade --install loki grafana/loki-stack -f values.yaml --namespace monitoring --create-namespace
          
          cat <<EOL > prometheus-values.yaml
          alertmanager:
            enabled: true
            config:
              global:
                resolve_timeout: 5m
                smtp_smarthost: '$SMTP_HOST'
                smtp_from: '$SMTP_USER'
                smtp_auth_username: '$SMTP_USER'
                smtp_auth_password: '$SMTP_PASSWORD'
                smtp_require_tls: true
              route:
                group_by: ['job']
                group_wait: 30s
                group_interval: 5m
                repeat_interval: 12h
                receiver: 'email-alerts'
                routes:
                  - match:
                      alertname: Watchdog
                    receiver: 'null'
              receivers:
                - name: 'null'
                - name: 'email-alerts'
                  email_configs:
                    - to: '$ALERT_EMAIL'
          EOL
          helm upgrade --install prometheus prometheus-community/kube-prometheus-stack \
            --namespace monitoring \
            --create-namespace \
            -f prometheus-values.yaml
          
          kubectl apply -f - <<EOL
          apiVersion: monitoring.coreos.com/v1
          kind: ServiceMonitor
          metadata:
            name: loki
            namespace: monitoring
            labels:
              release: prometheus
          spec:
            selector:
              matchLabels:
                app: loki
            namespaceSelector:
              matchNames:
                - monitoring
            endpoints:
              - port: http-metrics
                interval: 30s
          EOL
          
          kubectl apply -f - <<EOL
          apiVersion: monitoring.coreos.com/v1
          kind: PrometheusRule
          metadata:
            name: high-log-rate
            labels:
              release: prometheus
          spec:
            groups:
              - name: loki.rules
                rules:
                  - alert: HighLogRate
                    expr: rate(loki_distributor_lines_received_total[1m]) > 5
                    for: 1m
                    labels:
                      severity: warning
                    annotations:
                      summary: "High log rate detected"
                      description: "Log rate is greater than 10 entries per second for the last minute. Current rate is {{ \$value }} entries per second."
                      # CPU Usage Alert
                  - alert: HighCPUUsage
                    expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
                    for: 5m
                    labels:
                      severity: warning
                    annotations:
                      summary: High CPU usage on {{ \$labels.instance }}
                      description: "CPU usage is above 80% for 5 minutes\n Current value: {{ \$value }}%"
          
                  # Memory Usage Alert
                  - alert: HighMemoryUsage
                    expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
                    for: 5m
                    labels:
                      severity: warning
                    annotations:
                      summary: High memory usage on {{ \$labels.instance }}
                      description: "Memory usage is above 85% for 5 minutes\n Current value: {{ \$value }}%"
          
                  # Critical Memory Alert
                  - alert: CriticalMemoryUsage
                    expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 95
                    for: 5m
                    labels:
                      severity: critical
                    annotations:
                      summary: Critical memory usage on {{ \$labels.instance }}
                      description: "Memory usage is above 95% for 5 minutes\n Current value: {{ \$value }}%"
          
                  # Memory Under Pressure
                  - alert: SystemUnderMemoryPressure
                    expr: rate(node_vmstat_pgmajfault[1m]) > 1000
                    for: 2m
                    labels:
                      severity: warning
                    annotations:
                      summary: System under memory pressure on {{ \$labels.instance }}
                      description: "The system is experiencing high memory pressure with major page faults"
          
                  # CPU Load Average Alert
                  - alert: HighLoadAverage
                    expr: node_load1 > (count by (instance) (node_cpu_seconds_total{mode="idle"}) * 0.8)
                    for: 5m
                    labels:
                      severity: warning
                    annotations:
                      summary: High load average on {{ \$labels.instance }}
                      description: "System load average is high\n Current value: {{ \$value }}"
          EOL
          
          kubectl get pods -n monitoring
          kubectl get servicemonitors -n monitoring
          kubectl get prometheusrules -n monitoring
          EOF

      - name: Clean Up
        run: |
          rm -f private_key.pem