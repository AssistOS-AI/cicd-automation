name: Install k3s and Helm

on:
  workflow_dispatch:

jobs:
  setup-k3s:
    name: Install k3s and Helm on Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies on Runner
        run: |
          sudo apt update && sudo apt install -y sshpass

      - name: Install k3s and Helm on Remote Server
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          sudo echo "$SSH_KEY" > private_key.pem
          sudo chmod 600 private_key.pem

          ssh -o StrictHostKeyChecking=no -i private_key.pem $SSH_USER@$SSH_HOST << 'EOF'
            # Update the system
            sudo dnf update -y

            # Temporarily disable SELinux for installation
            setenforce 0

            # Install dependencies
            sudo dnf install -y curl iptables git

            # Install firewalld if needed
            if ! sudo systemctl is-active --quiet firewalld; then
              sudo dnf install -y firewalld
              sudo systemctl enable --now firewalld
              sudo firewall-cmd --permanent --set-target=DROP
              sudo firewall-cmd --permanent --add-service=ssh
              sudo firewall-cmd --permanent --add-rich-rule='rule protocol value="udp" drop'
              sudo firewall-cmd --reload
            fi

            # Install k3s
            curl -sfL https://get.k3s.io | sh -
            sudo systemctl enable --now k3s

            # Verify k3s
            kubectl get nodes

            # Install Helm
            sudo dnf install -y tar
            curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
            helm version

            # Export kubeconfig for local access
            mkdir -p ~/.kube
            sudo chmod 644 /etc/rancher/k3s/k3s.yaml
            sudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
            sudo sed -i "s/127.0.0.1/$(hostname -I | awk '{print $1}')/" ~/.kube/config

            # Re-enable SELinux
            sudo sed -i 's/^SELINUX=disabled/SELINUX=enforcing/' /etc/selinux/config
            echo "SELinux will be enabled after reboot"
          
            # Relabel SELinux contexts
            sudo touch /.autorelabel

            # Reboot the system
            sudo reboot
          EOF