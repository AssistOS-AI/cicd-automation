name: Deploy Assistos

on:
  workflow_dispatch:
    inputs:
      ASSISTOS_IMAGE_TAG:
        description: 'Tag for assistos image'
        required: true
        default: '1.0.0-rc5'
      LLMOS_IMAGE_TAG:
        description: 'Tag for llmos image'
        required: true
        default: '1.0.0-rc3'

env:
  DOMAIN: ${{ vars.DOMAIN }}
  SUBDOMAIN: ${{ vars.SUBDOMAIN }}
  VAULT_DOMAIN: ${{ vars.VAULT_DOMAIN }}
  DEV_MODE: ${{ vars.DEV_MODE }}
  ENVIRONMENT_MODE: ${{ vars.ENVIRONMENT_MODE }}
  PRODUCTION_BASE_URL: ${{ vars.PRODUCTION_BASE_URL }}
  LLMS_SERVER_PRODUCTION_BASE_URL: ${{ vars.LLMS_SERVER_PRODUCTION_BASE_URL }}
  S3_URL: ${{ vars.S3_URL }}
  HELM_CHART_URL: ${{ vars.HELM_CHART_URL }}
  CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.6.3

      - name: Get Assistos Image SHA
        id: assistos_sha
        run: |
          IMAGE_TAG="${{ github.event.inputs.ASSISTOS_IMAGE_TAG }}"
          REPOSITORY="assistos/assistos-workspace"
          docker pull ${REPOSITORY}:${IMAGE_TAG}
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${REPOSITORY}:${IMAGE_TAG} | awk -F '[:@]' '{print $3}')
          echo "ASSISTOS_IMAGE_SHA=${DIGEST}" >> $GITHUB_ENV
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Llmos Image SHA
        id: llmos_sha
        run: |
          IMAGE_TAG="${{ github.event.inputs.LLMOS_IMAGE_TAG }}"
          REPOSITORY="assistos/llmos"
          docker pull ${REPOSITORY}:${IMAGE_TAG}
          DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${REPOSITORY}:${IMAGE_TAG} | awk -F '[:@]' '{print $3}')
          echo "ASSISTOS_IMAGE_SHA=${DIGEST}" >> $GITHUB_ENV
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_API_TOKEN }}

      - name: Authenticate with DigitalOcean
        run: doctl auth init -t ${{ secrets.DO_API_TOKEN }}

      - name: Connect to Kubernetes cluster
        run: doctl kubernetes cluster kubeconfig save ${{ env.CLUSTER_NAME }}
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v3

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Deploy Helm chart
        env:
          EMAIL_CONFIG_JSON: ${{ secrets.EMAIL_CONFIG_JSON }}
          BUILD_SECRET_KEY: ${{ secrets.BUILD_SECRET_KEY }}
          SSO_SECRETS_ENCRYPTION_KEY: ${{ secrets.SSO_SECRETS_ENCRYPTION_KEY }}
        run: |
          helm repo add assistos ${{ env.HELM_CHART_URL }}
          helm repo update
          
          helm upgrade --install --wait --timeout 300s assistos assistos/assistos \
            --set config.domain="${{ env.DOMAIN }}" \
            --set config.subDomain="${{ env.SUBDOMAIN }}" \
            --set config.vaultDomain="${{ env.VAULT_DOMAIN }}" \
            --set config.buildSecretKey="${{ secrets.BUILD_SECRET_KEY }}" \
            --set config.ssoSecretsEncryptionKey="${{ secrets.SSO_SECRETS_ENCRYPTION_KEY }}" \
            --set config.dev="${{ env.DEV_MODE }}" \
            --set config.environmentMode="${{ env.ENVIRONMENT_MODE }}" \
            --set config.productionBaseUrl="${{ env.PRODUCTION_BASE_URL }}" \
            --set config.llmsServerProductionBaseUrl="${{ env.LLMS_SERVER_PRODUCTION_BASE_URL }}" \
            --set config.s3Url="${{ env.S3_URL }}" \
            --set assistos.image.tag="${{ github.event.inputs.ASSISTOS_IMAGE_TAG }}" \
            --set assistos.image.sha="${{ env.ASSISTOS_IMAGE_SHA }}" \
            --set llmos.image.tag="${{ github.event.inputs.LLMOS_IMAGE_TAG }}" \
            --set llmos.image.sha="${{ env.LLMOS_IMAGE_SHA }}"